#include <iostream>

using namespace std;

void fastRotate(int arr[], int n, int k){
    int newArr[2*n];
    for(int i=0;i<2*n;i++){
        newArr[i] = arr[i%n];
        //cout << newArr[i] << " ";
    }
    
    int shift = k%n;
    
    for(int i=shift;i<n+shift;i++){
        cout << newArr[i]<< " ";
    }
}


int main() 
{ 
    int arr[] = {15, 18, 2, 3, 6, 12, 22}; 
    int n = sizeof(arr)/sizeof(arr[0]); 
    fastRotate(arr, n, 2); 
    return 0; 
}




//////// other solution

// Function to left rotate an array k times 
void leftRotate(int arr[], int n, int k) 
{ 
    // Print array after k rotations 
    for (int i = k; i < k + n; i++) 
        cout << arr[i%n] << " "; 
} 
  
// Driver program 
int main() 
{ 
    int arr[] = {1, 3, 5, 7, 9}; 
    int n = sizeof(arr) / sizeof(arr[0]); 
  
    int k = 2; 
    leftRotate(arr, n, k); 
    cout << endl; 
  
    k = 3; 
    leftRotate(arr, n, k); 
    cout << endl; 
  
    k = 4; 
    leftRotate(arr, n, k); 
    cout << endl; 
  
    return 0; 
} 
